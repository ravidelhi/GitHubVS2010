//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace VehicalMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class vehicaldbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new vehicaldbEntities object using the connection string found in the 'vehicaldbEntities' section of the application configuration file.
        /// </summary>
        public vehicaldbEntities() : base("name=vehicaldbEntities", "vehicaldbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new vehicaldbEntities object.
        /// </summary>
        public vehicaldbEntities(string connectionString) : base(connectionString, "vehicaldbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new vehicaldbEntities object.
        /// </summary>
        public vehicaldbEntities(EntityConnection connection) : base(connection, "vehicaldbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehical> Vehicals
        {
            get
            {
                if ((_Vehicals == null))
                {
                    _Vehicals = base.CreateObjectSet<Vehical>("Vehicals");
                }
                return _Vehicals;
            }
        }
        private ObjectSet<Vehical> _Vehicals;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicals(Vehical vehical)
        {
            base.AddObject("Vehicals", vehical);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="vehicaldbModel", Name="Vehical")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehical : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehical object.
        /// </summary>
        /// <param name="vehicalID">Initial value of the VehicalID property.</param>
        public static Vehical CreateVehical(global::System.Int32 vehicalID)
        {
            Vehical vehical = new Vehical();
            vehical.VehicalID = vehicalID;
            return vehical;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicalID
        {
            get
            {
                return _VehicalID;
            }
            set
            {
                if (_VehicalID != value)
                {
                    OnVehicalIDChanging(value);
                    ReportPropertyChanging("VehicalID");
                    _VehicalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VehicalID");
                    OnVehicalIDChanged();
                }
            }
        }
        private global::System.Int32 _VehicalID;
        partial void OnVehicalIDChanging(global::System.Int32 value);
        partial void OnVehicalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicalName
        {
            get
            {
                return _VehicalName;
            }
            set
            {
                OnVehicalNameChanging(value);
                ReportPropertyChanging("VehicalName");
                _VehicalName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicalName");
                OnVehicalNameChanged();
            }
        }
        private global::System.String _VehicalName;
        partial void OnVehicalNameChanging(global::System.String value);
        partial void OnVehicalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion
    
    }

    #endregion
    
}
